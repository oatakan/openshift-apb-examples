##############################################################################
## Provision speedtest
## This role executes much of the needed functionality to provision an
## application using an Ansible Playbook Bundle.  Included in the comments
## below are some sample resources for getting started deploying an application
## to OpenShift.
##############################################################################


##############################################################################
## An OpenShift Origin deployment configuration provides a replication
## controller, spins up pods, and also provides the ability to transition from
## one deployment of an image to a new one.
## https://docs.openshift.org/latest/architecture/core_concepts/deployments.html#deployments-and-deployment-configurations
##############################################################################
- name: create speedtest service
  k8s_v1_service:
    name: speedtest
    namespace: '{{ namespace }}'
    state: present
    labels:
      app: '{{ namespace }}'
      service: speedtest
    selector:
      app: '{{ namespace }}'
      service: speedtest
    type: LoadBalancer
    ports:
      - name: speedtest-80
        port: 80
        protocol: TCP
        target_port: 80

- name: create speedtest route
  openshift_v1_route:
    name: speedtest
    namespace: '{{ namespace }}'
    labels:
      app: '{{ namespace }}'
      service: speedtest
    to_name: speedtest
    spec_port_target_port: speedtest-80
  register: route

- name: create deployment config for speedtest
  openshift_v1_deployment_config:
    name: speedtest
    namespace: '{{ namespace }}'
    labels:
      app: '{{ namespace }}'
      service: speedtest
    replicas: 1
    selector:
      app: '{{ namespace }}'
      service: speedtest
    spec_template_metadata_labels:
      app: '{{ namespace }}'
      service: speedtest
    containers:
    - env:
      image: adolfintel/speedtest:{{ speedtest_version }}
      name: speedtest
      ports:
      - container_port: 80
        protocol: TCP
    dns_policy: ClusterFirst
    restart_policy: Always
    termination_grace_period_seconds: 30
    triggers:
    - type: ConfigChange
